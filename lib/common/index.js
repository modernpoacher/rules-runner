"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.isObject=exports.isBoolean=void 0;exports.toBoolean=toBoolean;exports.toNull=toNull;exports.toNumber=toNumber;exports.toRegExp=toRegExp;exports.toString=toString;var _debug=_interopRequireDefault(require("debug"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}const log=(0,_debug.default)('@modernpoacher/rules-runner:common');log('`@modernpoacher/rules-runner` is awake');const isBoolean=v=>typeof v==='boolean'||v==='true'||v==='false';exports.isBoolean=isBoolean;const isObject=v=>(v||false).constructor===Object&&!Array.isArray(v);exports.isObject=isObject;function toNull(v){log('toNull');if(v===null||v==='null')return null;throw new Error('Invalid `null`');}function toRegExp(v){log('toRegExp');if(v instanceof RegExp)return v;if(typeof v==='string'){if(/^\/(.*)\/(\w*)$/.test(v)){const[match,expression,flags]=v.match(/^\/(.*)\/(\w*)$/);if(match)return new RegExp(expression,flags);}}throw new Error('Invalid `reg exp`');}function toBoolean(v){log('toBoolean');if(typeof v==='boolean')return v;if(v==='true')return true;if(v==='false')return false;throw new Error('Invalid `boolean`');}function toString(v){log('toString');if(typeof v==='string')return v;if(typeof v==='number')return String(v);return JSON.stringify(v);}function toNumber(v){log('toNumber');if(typeof v==='number')return v;if(v){const n=Number(v);if(!isNaN(n))return n;}throw new Error('Invalid `number`');}
